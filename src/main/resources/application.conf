akka {
    loglevel = INFO
    actor {
        allow-java-serialization = on
    }
}
akka.actor.allow-java-serialization = on
mySpecialConfig {
    akka {
        loglevel = DEBUG
    }
}

# timed assertions test config
specialTimedAssertionsConfig {
    akka.test.single-expect-default = 0.5s
}

# intercepting log messages test
interceptingLogMessages {
  akka {
    loggers = ["akka.testkit.TestEventListener"]
    test {
      filter-leeway = 5s
    }
  }
}

# routers demo. poolMaster2 is the name of the master that I am instantiate
routersDemo {
  akka {
    actor.deployment {
      /poolMaster2 {
        router = round-robin-pool
        nr-of-instances = 5
      }

      /groupMaster2 {
        router = round-robin-group
        routees {
          paths = ["/user/slave_1","/user/slave_2","/user/slave_3","/user/slave_4","/user/slave_5"]
        }
      }
    }
  }
}

# dispatchers demo
my-dispatcher {
  type = Dispatcher # PinnedDispatcher, CallingThreadDispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 1
  }
  throughput = 30
}

dispatchersDemo {
  akka.actor.deployment {
    /my_actor_path_1 {
      dispatcher = my-dispatcher
    }
    /my_actor_path_2 {
      dispatcher = my-dispatcher
    }
  }
}

# mailbox demo
mailboxesDemo {
    support-ticket-dispatcher {
        mailbox-type = "org.github.felipegutierrez.explore.akka.infra.Mailboxes$SupportTicketPriorityMailbox"
    }
    control-mailbox {
        mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
    }
    akka.actor.deployment {
        /altControlAwareActor {
            mailbox = control-mailbox
        }
    }
}

akka.grpc.client {
  "org.github.felipegutierrez.explore.akka.rpc.greeting.GreeterService" {
    host = 127.0.0.1
    port = 8080
    override-authority = foo.test.google.fr
    trusted = /certs/ca.pem
  }
}

# akka persistence
akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
akka.persistence.journal.leveldb.dir = "target/rtjvm/journal"

akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
akka.persistence.snapshot-store.local.dir = "target/rtjvm/snapshots"

votingPersistentExercise {
  akka {
    loglevel = INFO
      actor {
        allow-java-serialization = on
      }
  }
  akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
  akka.persistence.journal.leveldb.dir = "target/rtjvm/journalvoting"
}
